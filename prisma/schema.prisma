generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_PRISMA_URL")
  // directUrl         = env("POSTGRES_URL_NON_POOLING")
  // shadowDatabaseUrl = env("POSTGRES_URL_NON_POOLING")
}

model Product {
  id           Int           @id @default(autoincrement())
  name         String
  picture      String
  price        Float
  productType  ProductType
  description  String?
  sizes        Sizes[]
  stock        Int?          @default(0)
  orderDetails OrderDetail[]
}

model User {
  id         Int      @id @default(autoincrement())
  name       String
  lastName   String
  email      String   @unique
  password   String?
  address    String?
  city       String?
  postalCode String?
  phone      String?
  provider   String
  cuit       String?
  localidad  String?
  shopName   String?
  coupons    Coupon[]
  orders     Order[]
}

model Order {
  id           Int           @id @default(autoincrement())
  userId       Int
  date         DateTime      @default(now())
  total        Float
  status       String
  discountCode String?
  couponId     Int?
  deliveryDate DateTime?
  coupon       Coupon?       @relation(fields: [couponId], references: [id])
  Discount     Discount?     @relation(fields: [discountCode], references: [code])
  user         User          @relation(fields: [userId], references: [id])
  orderDetails OrderDetail[]
}

model OrderDetail {
  id        Int     @id @default(autoincrement())
  orderId   Int
  productId Int
  quantity  Int
  unitPrice Float
  size      String
  order     Order   @relation(fields: [orderId], references: [id])
  products  Product @relation(fields: [productId], references: [id])
}

model Coupon {
  id               Int       @id @default(autoincrement())
  code             String    @unique
  discountValue    Float?
  discountPercent  Float?
  description      String
  useOnce          Boolean   @default(true)
  userId           Int?
  used             Boolean   @default(false)
  expiryDate       DateTime?
  createdAt        DateTime  @default(now())
  autoGenerated    Boolean   @default(false)
  minPurchaseUnits Int?
  user             User?     @relation(fields: [userId], references: [id])
  orders           Order[]
}

model Configuration {
  id    Int    @id @default(autoincrement())
  name  String @unique
  value String
}

model Discount {
  id        Int       @id @default(autoincrement())
  code      String    @unique
  discount  Float
  active    Boolean
  createdAt DateTime  @default(now())
  updatedAt DateTime
  deletedAt DateTime?
  Order     Order[]
}

enum ProductType {
  NEOPRENE_COVER
  MALETINES
  MALETINES_FULL_COLOR
  TABLET_COVER
  CUBRE_VALIJAS
  PORTAFOLIOS
  CON_BOLSILLO
  SCHOOL_BAGS
  BAGS
  LONCHERAS
}

enum Sizes {
  Size7
  Size8
  Size9
  Size10
  Size12
  Size14
  Size14_1
  Size15_6
  Size17
  S
  M
  L
}
